Question-1( Array sort 0,1,2)

#include<iostream>  
using namespace std;
void sort_array ( int A[ ] , int n )    
{  
    int i = 0,countzero = 0,countone = 0 ,counttwo = 0 ;  
    while (i<n)  
    {  
        if (A[ i ]==0 )  
        {  
            countzero=countzero + 1 ;  
        }  
        else if (A[ i ]== 1)  
        {  
            countone = countone + 1 ;  
        }  
        else  
        {  
            counttwo = counttwo + 2 ;  
        }  
        i = i + 1 ;  
    }  
    for  (i=0 ; i<countzero ; i++ )  
    {  
        A[i]=0 ;  
    }  
    for (i=countzero ; i<countzero + countone ; i++ )  
    {  
        A[i] = 1 ;  
    }  
    for ( i=countzero + countone ; i<n ; i++ )  
    {  
        A[i]= 2 ;  
    }  
}  
int main()  
{  
    int i ,  A[50] , n;  
    cout<< " Enter number of elements present in the array: " ;  
    cin>>n ;  
    cout<<" Enter array:" << "\n " ;  
    for ( i = 0 ; i < n ; i++ )  
    {  
        cin>>A[i] ;  
    }  
    cout<<" Array after sorting :" ;  
    sort_array (A,n) ;  
    for (i =0 ; i<n ; i++ )  
    {  
        cout<<"  " << A [ i ]  ;  
    }  
      
}  


Question-2( maximum minimum in an array)

#include <iostream>
using namespace std;
#define MAX_SIZE 100   // Maximum array size

int main()
{
    int arr[MAX_SIZE];
    int i, max, min, size;

    /* Input size of the array */
    cout<<"Enter size of the array: ";
    cin>>size;

    /* Input array elements */
    cout<<"Enter elements in the array: ";
    for(i=0; i<size; i++)
    {
        cin>>arr[i];
    }


    /* Assume first element as maximum and minimum */
    max = arr[0];
    min = arr[0];

    /*
     * Find maximum and minimum in all array elements.
     */
    for(i=1; i<size; i++)
    {
        /* If current element is greater than max */
        if(arr[i] > max)
        {
            max = arr[i];
        }

        /* If current element is smaller than min */
        if(arr[i] < min)
        {
            min = arr[i];
        }
    }

    /* Print maximum and minimum element */
    cout<<"Maximum element = "<< max;
    cout<<"\n Minimum element = "<< min;

    return 0;
}

Question-3(Negative elements to one side in an array)

#include<iostream>
using namespace std;
void shiftIntegers(int arr[], int n)
{
    int j = 0;
    for (int i = 0; i < n; i++)
    {
        if (arr[i] < 0)
        {
            if (i != j)
                swap(arr[i], arr[j]);
            j++;
        }
    }
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
}
int main()
{
    int arr[] = { 2,4,-10,13,-7,-60,52,8,-19 };
    int n = sizeof(arr) / sizeof(arr[0]);
    shiftIntegers(arr, n);
    return 0;
}

Question-4(Reverse of an array)

#include <iostream>  
using namespace std;  
  
void ArrRev ( int [], int);  
int main ()  
{  
    int arr[50], num, i, j, temp;  
    cout << " Number of elements to be entered: " << endl;  
    cin >> num;  
          
    cout << " Enter the array elements: " << endl;  
      
    // use for loop to enter the elements  
    for ( i = 0; i < num; i++)  
    {  
        cin >> arr[i];  
    }  
    cout << " Elements are: \n";  
    // display entered elements in array  
    for ( i = 0; i < num; i++)  
    {  
        cout << arr[i] << " ";  
    }  
    ArrRev (arr, num); // call function  
      
    cout << " \n The reverse of the given array is: \n";  
    // use for loop to print the reverse array elements  
    for ( i = 0; i < num ; i++)  
    {  
        cout << arr[i] << " ";  
    }  
    cout << endl;  
    return 0;  
}  
  
void ArrRev ( int ar[], int a2)  
{  
    int i, j, temp;  
    j = a2 - 1;  
    for ( i = 0; i < j; i++, j--)  
    {  
        temp = ar[i];  
        ar[i] = ar[j];  
        ar[j] = temp;  
    }  
} 

Question-5(Union intersection of 2 sorted arrays)

#include <iostream>
using namespace std;

void arrayunion(int a[], int b[], int x, int y)
{
	int i=0, j=0;
	cout << "\nUnion Of both the Arrays\n";

	while (i<x  && j<y)
	{
		if (a[i] < b[j])
			cout << a[i++] << " ";
		else if (a[i] > b[j])
			cout << b[j++] << " ";
		else
		{
			cout << a[i++] << " ";
			j++;
		}
	}

	while (i<x)
		cout << a[i++] << " ";
	while (j<y)
		cout << b[j++] << " ";
}

void intersection(int a[], int b[], int x, int y)
{
	int i=0, j=0;
	cout << "\n\nIntersection Of Array\n\n";
	while (i<x && j<y)
	{
		if (a[i] < b[j])
			i++;
		else if (a[i] > b[j])
			j++;
		else
		{
			cout << a[i++] << " ";
			j++;
		}
	}
}

int main()
{
	int x,y,i,j,a[100],b[100];

	cout <<"Enter The Size Of First Array:\n";
	cin >>x;

	cout << "\nEnter The Element In First Array:\n";

	for (i=0; i<x; i++)
	{
		cin >> a[i];
	}

	cout << "\nEnter The Size Of Second Array:\n";
	cin >>y;

	cout << "\nEnter The Element In Second Array:\n";

	for (j = 0; j<y; j++)
	{
		cin>>b[j];
	}

	arrayunion(a, b, x, y);
	intersection(a, b, x, y);

	return 0;
}
